0-add_integer module
===================================

module 0-add_integer takes two integers or floats arguments to returns the sum


Importing module
    >>> add_integer = __import__('0-add_integer').add_integer

Add two integers (3, 1)
    >>> add_integer(3, 1)
    4

Add positive and negative integer (5, -1)
    >>> add_integer(5, -1)
    4

Add integers with the second a default value(2, 98)
    >>> add_integer(2)
    100

Add positive float and positive integer (1.2, 2)
    >>> add_integer(1.2, 2)
    3

Add float and the second integer that is default value(2.1, 98)
    >>> add_integer(2.1)
    100

Add positive float and negative integer (5.2, -1)
	    >>> add_integer(5.2, -1)
	    4


Add negative integers (-5, -3)
    >>> add_integer(-5, -3)
    -8


Add negative floats (-5.2, -1)
	    >>> add_integer(-5.2, -1)
	    -6

Add integer and string (2, "bag")
    >>> add_integer(2, "Bag")
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer


OverflowError:

    >>> add_integer(float('inf'), 5)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer


OverflowError

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer


NaN float argument (should raise a ValueError)

    >>> add_integer(5, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer


NaN float argument (should raise a ValueError)

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer


Passing no argument
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Add letter and a number (a = 'c' and b = 1)
    >>> add_integer('c', 1)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Add letters ('a', 'b')
    >>> add_integer('a', 'b')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Add tuple
    >>> add_integer((1, 1))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Add number and list
    >>> add_integer(012, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing a single string
    >>> add_integer("Bag")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Add float numbers (1.2, 5.1)
    >>> add_integer(1.2, 5.1)
    6
